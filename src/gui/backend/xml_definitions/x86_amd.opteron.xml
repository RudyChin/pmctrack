<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pmcs_and_events SYSTEM "events.dtd">
<!-- xml definition file for amd events supported by PMCTrackGUI -->
<pmcs_and_events>

<events>
  <!-- "Floating Point Events" index="3.14.1" -->
  <event>
    <name>Dispatched FPU Operations</name>
    <code>0x0</code>
    <subevents>
      <subevent>
        <subevt_name>Add pipe ops excluding load ops and SSE move ops</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x01</flag_value>
          </flag>
          <flag>
            <flag_name>cmask</flag_name>
            <flag_value>1</flag_value>
          </flag>
          <flag>
            <flag_name>inv</flag_name>
            <flag_value>1</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Multiply pipe ops excluding load ops and SSE move ops</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x02</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Add pipe load ops and SSE move ops</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x08</flag_value>
          </flag>
        </flags>
      </subevent>
    </subevents>
  </event>

  <event>
    <name>Cycles in which the FPU is Empty</name>
    <descp>The number of cycles in which the FPU is empty.
    Use inv=1 to count cycles in which at least one FPU operation is present in the FPU.</descp>
    <code>0x001</code>
    <flags>
      <flag>
        <flag_name>inv</flag_name>
        <flag_value>0</flag_value>
      </flag>
    </flags>
  </event>

  <event>
    <name>Retired SSE Operations</name>
    <descp>The number of SSE operations retired.
    This counter can count either FLOPS (use umask = 0x40 + subevents codes) or uops (use umask = just subevents codes).</descp>
    <code>0x003</code>
    <flags>
      <flag>
        <flag_name>umask</flag_name>
        <flag_value>0x40</flag_value>
      </flag>
    </flags>
    <subevents>
      <subevent>
        <subevt_name>Single precision add/subtract ops</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x01</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Single precision multiply ops</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x02</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Single precision divide/square root ops</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x04</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Double precision add/subtract ops</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x08</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Double precision multiply ops</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x10</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Double precision divide/square root ops</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x20</flag_value>
          </flag>
        </flags>
      </subevent>
    </subevents>
  </event>

  <!-- "Load/Store and TLB Events" index="3.14.2" -->

  <!-- "Retired Ins." index="3.14.6" -->
  <event>
    <name>Retired Instructions</name>
    <code>0x0c0</code>
  </event>

  <event>
    <name>Retired uops</name>
    <code>0x0c1</code>
  </event>

  <event>
    <name>Retired Mispredicted Branch Instructions</name>
    <code>0x0c3</code>
  </event>

  <!-- "L2 Cache and System Interface Events" index="3.14.4" -->
  <event>
    <name>CPU clocks not halted</name>
    <code>0x076</code>
  </event>

  <event>
    <name>Data Cache Accesses</name>
    <descp>The number of accesses to the data cache for load and store references. This may include certain microcode
      scratchpad accesses, although these are generally rare. Each increment represents an eight-byte access,
      although the instruction may only be accessing a portion of that. This event is a speculative event.</descp>
    <code>0x040</code>
  </event>

  <event>
    <name>Data Cache Misses</name>
    <code>0x041</code>
  </event>

  <!-- "Instruction Cache Events" index="3.14.5" -->
  <event>
    <name>Instruction Cache Fetches</name>
    <code>0x80</code>
  </event>

  <event>
    <name>Instruction Cache Misses</name>
    <code>0x81</code>
  </event>


  <!-- "Execution Unit Events" index="3.14.6" -->

  <event>
    <name>Retired Instructions</name>
    <descp>The number of instructions retired (execution completed and architectural state updated).
    This count includes exceptions and interrupts - each exception or interrupt is counted as one instruction.</descp>
    <code>0x0c0</code>
  </event>

  <event>
  <name>Retired uops</name>
    <descp>The number of micro-ops retired. &#xA; This includes all processor activity (instructions, exceptions, interrupts, microcode assists, etc.).</descp>
    <code>0x0c1</code>
  </event>

  <event>
    <name>Retired Branch Instructions</name>
    <descp>The number of branch instructions retired.
    This includes all types of architectural control flow changes, including exceptions and interrupts.</descp>
    <code>0x0c2</code>
  </event>

  <event>
    <name>Retired Mispredicted Branch Instructions</name>
    <descp>The number of branch instructions retired, of any type, that are not correctly predicted.
    This includes those for which prediction is not attempted (far control transfers, exceptions and interrupts).</descp>
    <code>0x0c3</code>
  </event>

  <event>
    <name>Retired Taken Branch Instructions</name>
    <descp>The number of taken branches retired.
    This includes all types of architectural control flow changes, including exceptions and interrupts.</descp>
    <code>0x0c4</code>
  </event>

  <event>
    <name>Retired Taken Branch Instructions Mispredicted</name>
    <descp>The number of retired taken branch instructions that are mispredicted.</descp>
    <code>0x0c5</code>
  </event>
  <!-- [...] -->

  <event>
    <name>Retired MMX/FP Instructions</name>
    <descp>The number of MMX, SSE or X87 instructions retired.
    Each increment represents one complete instruction</descp>
    <code>0x0cb</code>
    <subevents>
      <subevent>
        <subevt_name>x87 instructions</subevt_name>
          <flags>
            <flag>
              <flag_name>umask</flag_name>
              <flag_value>0x01</flag_value>
            </flag>
          </flags>
        </subevent>
      <subevent>
        <subevt_name>MMX and 3DNow! instructions</subevt_name>
          <flags>
            <flag>
              <flag_name>umask</flag_name>
              <flag_value>0x02</flag_value>
            </flag>
          </flags>
        </subevent>
      <subevent>
        <subevt_name>SSE instructions (SSE, SSE2, SSE3, and SSE4A)</subevt_name>
          <flags>
            <flag>
              <flag_name>umask</flag_name>
              <flag_value>0x04</flag_value>
            </flag>
          </flags>
        </subevent>
    </subevents>
  </event>
  <!-- [...] -->
  <event>
    <name>Interrupts taken</name>
    <descp>The number of hardware interrupts taken. This does not include software interrupts</descp>
    <code>0x0cf</code>
  </event>

  <!-- "L3 Cache Events" index="3.14.10" -->
  <event>
    <name>L3 Cache Read Requests</name>
    <descp>This event tracks the read requests from each core to the L3 cache including read requests that are cancelled. One or more cores must be selected. By default, it counts the total number of read requests from core 0</descp>
    <code>0x4e0</code>
    <flags>
      <flag>
        <flag_name>umask</flag_name>
        <flag_value>0x07</flag_value>
      </flag>
    </flags>
    <subevents>
      <subevent>
        <subevt_name>Read Block Exclusive</subevt_name>
        <subevt_descp>Data cache read</subevt_descp>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x01</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Read Block Shared</subevt_name>
        <subevt_descp>Instruction cache read</subevt_descp>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x02</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Read Block Modify</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x04</flag_value>
          </flag>
        </flags>
      </subevent>

      <!-- Revision C and earlier -->

      <subevent>
        <subevt_name>Core 0 Select - old revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x10</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Core 1 Select - old revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x20</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Core 2 Select - old revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x40</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Core 3 Select - old revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x80</flag_value>
          </flag>
        </flags>
      </subevent>

      <!-- Revision D and later -->

      <subevent>
        <subevt_name>Core 0 Select - new revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x00</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Core 1 Select - new revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x10</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Core 2 Select - new revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x20</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Core 3 Select - new revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x30</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Core 4 Select - new revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x40</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Core 5 Select - new revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x50</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Any core - new revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0xf0</flag_value>
          </flag>
        </flags>
      </subevent>
    </subevents>
  </event>

  <event>
    <name>L3 Cache Misses</name>
    <descp>This event counts the number of L3 cache misses for accesses from each core. One or more cores must be selected. By default, it counts the total number of cache misses from core 0.
    The approximate number of L3 hits can be determined by creating a metric which subtracts this event from "L3 Cache Read Requests" (0x4e0) event.</descp>
    <code>0x4e1</code>
    <flags>
      <flag>
        <flag_name>umask</flag_name>
        <flag_value>0x07</flag_value>
      </flag>
    </flags>
    <subevents>
      <subevent>
        <subevt_name>Read Block Exclusive</subevt_name>
        <subevt_descp>Data cache read</subevt_descp>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x01</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Read Block Shared</subevt_name>
        <subevt_descp>Instruction cache read</subevt_descp>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x02</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Read Block Modify</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x04</flag_value>
          </flag>
        </flags>
      </subevent>

      <!-- Revision C and earlier -->
      <subevent>
        <subevt_name>Core 0 Select - old revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x10</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Core 1 Select - old revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x20</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Core 2 Select - old revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x40</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Core 3 Select - old revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x80</flag_value>
          </flag>
        </flags>
      </subevent>

     <!-- Revision D and later -->

      <subevent>
        <subevt_name>Core 0 Select - new revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x00</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Core 1 Select - new revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x10</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Core 2 Select - new revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x20</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Core 3 Select - new revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x30</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Core 4 Select - new revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x40</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Core 5 Select - new revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0x50</flag_value>
          </flag>
        </flags>
      </subevent>
      <subevent>
        <subevt_name>Any core - new revision</subevt_name>
        <flags>
          <flag>
            <flag_name>umask</flag_name>
            <flag_value>0xf0</flag_value>
          </flag>
        </flags>
      </subevent>
    </subevents>
  </event>

</events>

</pmcs_and_events>
